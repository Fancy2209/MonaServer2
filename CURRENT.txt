=> c'est fou la différence entre les logs windows sous mona et sous testclient

Tom 19 =>
- Comprendre comment utiliser libRTMFP pour le présenter à Marc
- Rendezvous service, proche de peerId et pas de SHA256(peerId)? pb performance => ton client lui cherche des voisins à SHA256(peerId) => sollicite le rendezvous service!!
- Burn avoist
- multicasting implications

Multi-Server=>
- RTMFP onRendezVousUnknow => useless in external API, happens just on group member connection between => returns les adresses de tous les serveur RTMFP actifs
- RTMFP Group new member => if group < 2log2(N)+13 then broadcast to servers this memberId (server.broadcast = TCP), et sans l'enregistrer dans les groupes correspond distribuer le memberId à 2log2(N)+13 membres (pour bien mixer les groupes entre serveurs) 

Sur contrat:
- Security StreamData... check all
- WebSocket => @join, return log truc ips + @relay, send messages to every members?
- HTTP with mime=application/sdp + upgrade=WebRTC => WebRTC(sdp)!!!!!
- WebSocket-SIP => https://tools.ietf.org/html/rfc7118 - https://en.wikipedia.org/wiki/JsSIP - http://www.jssip.net/
- https://webrtc.github.io/samples/src/content/peerconnection/munge-sdp/

C:\Program Files\VideoLAN\VLC>vlc -vvv C:\Users\mathieu\Documents\Marc\SintelJS.ts --sout "#udp{dst=127.0.0.1:1234}"


1- WebSocket (+)full control (+)extrem low latency (+)allow any codec support (+)cross browser (-)JS decoding
2- WebRTC    (+)native decoding (+)low latency (-)required WebRTC support (-)codec supported depend of browser
3- HTTP/MP4 framgented (+)native decodng (+)cross browser (-)latency to test (-)codec supported depend of browser

